//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "chat")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub date: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::msg::Entity")]
    Msg,
}

impl Related<super::msg::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Msg.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        super::member::Relation::User.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::member::Relation::Chat.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
